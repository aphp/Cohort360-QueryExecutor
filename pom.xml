<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>cohort-requester</artifactId>
  <groupId>fr.aphp.id.eds</groupId>
  <version>2.10.1</version>
  <packaging>jar</packaging>
  <name>Cohort Requester</name>
  <description/>

  <properties>
    <license.dir>${project.basedir}/..</license.dir>
    <license.dir>${basedir}</license.dir>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <encoding>UTF-8</encoding>

    <scala.tools.version>2.12</scala.tools.version>
    <scala.version>2.12.15</scala.version>
    <spark.version>3.4.0</spark.version>
    <scala-logging.version>3.9.2</scala-logging.version>
    <postgres.version>42.4.4</postgres.version>
    <scalactic.version>3.2.10</scalactic.version>
    <scalatest.version>3.2.10</scalatest.version>
    <mockito.version>1.17.14</mockito.version>
    <sparkfasttest.version>1.3.0</sparkfasttest.version>
    <fasterxml.version>2.15.4</fasterxml.version>
    <scalatra.version>2.7.1</scalatra.version>
    <solr.version>8.11.0</solr.version>
    <hapifhir.version>7.2.1</hapifhir.version>
    <hadoop.version>2.6.5</hadoop.version>
    <spark-solr.version>4.0.4</spark-solr.version>
    <wiremock.version>3.3.1</wiremock.version>
    <postgrestest.version>1.20.4</postgrestest.version>
    <!--  Sonar  -->
    <sonar.qualitygate.wait>true</sonar.qualitygate.wait>

    <release.name>RELEASE</release.name>
    <snapshot.name>SNAPSHOT</snapshot.name>
    <compiler.plugin.version>3.6.2</compiler.plugin.version>
    <scoverage.plugin.version>1.4.11</scoverage.plugin.version>
    <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>

  </properties>



  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
    </dependency>
    <dependency>
      <groupId>org.scala-lang.modules</groupId>
      <artifactId>scala-java8-compat_${scala.tools.version}</artifactId>
      <version>1.0.2</version>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-layout-template-json</artifactId>
      <version>2.20.0</version>
    </dependency>

    <!-- spark -->
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql_${scala.tools.version}</artifactId>
      <version>${spark.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-core_${scala.tools.version}</artifactId>
      <version>${spark.version}</version>
    </dependency>
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-buffer</artifactId>
      <version>4.1.86.Final</version>
    </dependency>


    <!-- FHIR Client (HAPI) -->
    <dependency>
      <groupId>ca.uhn.hapi.fhir</groupId>
      <artifactId>hapi-fhir-base</artifactId>
      <version>${hapifhir.version}</version>
    </dependency>
    <dependency>
      <groupId>ca.uhn.hapi.fhir</groupId>
      <artifactId>hapi-fhir-client</artifactId>
      <version>${hapifhir.version}</version>
    </dependency>
    <dependency>
      <groupId>ca.uhn.hapi.fhir</groupId>
      <artifactId>hapi-fhir-structures-r4</artifactId>
      <version>${hapifhir.version}</version>
    </dependency>
    <dependency>
      <groupId>ca.uhn.hapi.fhir</groupId>
      <artifactId>hapi-fhir-validation</artifactId>
      <version>${hapifhir.version}</version>
    </dependency>
    <dependency>
      <groupId>ca.uhn.hapi.fhir</groupId>
      <artifactId>hapi-fhir-caching-caffeine</artifactId>
      <version>${hapifhir.version}</version>
    </dependency>

    <!--
            org.apache.solr
        -->
    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-solrj</artifactId>
      <version>${solr.version}</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>com.lucidworks.spark</groupId>
      <artifactId>spark-solr</artifactId>
      <version>${spark-solr.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.solr</groupId>
      <artifactId>solr-core</artifactId>
      <version>${solr.version}</version>
      <type>jar</type>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <groupId>org.antlr</groupId>
          <artifactId>antlr4-runtime</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.codehaus.janino</groupId>
          <artifactId>commons-compiler</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.codehaus.janino</groupId>
          <artifactId>janino</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.antlr</groupId>
          <artifactId>antlr4-runtime</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-annotations</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-auth</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.hadoop</groupId>
          <artifactId>hadoop-hdfs-client</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr4</artifactId>
      <version>4.9.3</version>
    </dependency>
<!--    <dependency>-->
<!--      <groupId>org.apache.solr</groupId>-->
<!--      <artifactId>solr-test-framework</artifactId>-->
<!--      <version>${solr.version}</version>-->
<!--      <type>jar</type>-->
<!--      <scope>test</scope>-->
<!--      <exclusions>-->

<!--      </exclusions>-->
<!--    </dependency>-->
    <!--
            org.apache.hadoop
        -->
<!--    <dependency>-->
<!--      <groupId>org.apache.hadoop</groupId>-->
<!--      <artifactId>hadoop-client</artifactId>-->
<!--      <scope>test</scope>-->
<!--      <version>${hadoop.version}</version>-->
<!--    </dependency>-->
    <!--
            com.fasterxml.jackson
        -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${fasterxml.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${fasterxml.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-scala_${scala.tools.version}</artifactId>
      <version>${fasterxml.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${fasterxml.version}</version>
    </dependency>

    <!--
            third-parties
        -->
    <dependency>
      <groupId>org.scalatra</groupId>
      <artifactId>scalatra_${scala.tools.version}</artifactId>
      <version>${scalatra.version}</version>
    </dependency>
    <dependency>
      <groupId>org.scalatra</groupId>
      <artifactId>scalatra-json_${scala.tools.version}</artifactId>
      <version>${scalatra.version}</version>
    </dependency>
    <dependency>
      <groupId>org.scalatra</groupId>
      <artifactId>scalatra-swagger_${scala.tools.version}</artifactId>
      <version>${scalatra.version}</version>
    </dependency>
    <dependency>
      <groupId>org.json4s</groupId>
      <artifactId>json4s-native_${scala.tools.version}</artifactId>
      <version>3.6.10</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-webapp</artifactId>
      <version>9.4.51.v20230217</version>
    </dependency>


    <dependency>
      <groupId>com.typesafe</groupId>
      <artifactId>config</artifactId>
      <version>1.4.2</version>
    </dependency>


    <dependency>
      <groupId>com.esotericsoftware</groupId>
      <artifactId>kryo-shaded</artifactId>
      <version>4.0.2</version>
    </dependency>
    <dependency>
      <groupId>com.typesafe.play</groupId>
      <artifactId>play-json_${scala.tools.version}</artifactId>
      <version>2.7.4</version>
    </dependency>
    <dependency>
      <groupId>com.typesafe.scala-logging</groupId>
      <artifactId>scala-logging_${scala.tools.version}</artifactId>
      <version>${scala-logging.version}</version>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgres.version}</version>
    </dependency>
    <dependency>
      <groupId>org.scalactic</groupId>
      <artifactId>scalactic_${scala.tools.version}</artifactId>
      <version>${scalactic.version}</version>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.tools.version}</artifactId>
      <version>${scalatest.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-scala_${scala.tools.version}</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.mrpowers</groupId>
      <artifactId>spark-fast-tests_${scala.tools.version}</artifactId>
      <version>${sparkfasttest.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.github.tomakehurst/wiremock -->
    <!-- https://mvnrepository.com/artifact/org.wiremock/wiremock -->
    <dependency>
      <groupId>org.wiremock</groupId>
      <artifactId>wiremock-standalone</artifactId>
      <version>${wiremock.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgrestest.version}</version>
      <scope>test</scope>
    </dependency>





  </dependencies>
  <build>
    <sourceDirectory>${basedir}/src/main/scala</sourceDirectory>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler.plugin.version}</version>
        <configuration>
          <skipMain>true</skipMain>
          <skip>true</skip>
        </configuration>
      </plugin>

      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <scalaVersion>${scala.version}</scalaVersion>
        </configuration>
      </plugin>

      <!--
        this is used to create a fat jar with all dependencies
        that will be sent to the spark executors
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.2.4</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <finalName>${project.artifactId}-libs</finalName>
              <shadedArtifactAttached>true</shadedArtifactAttached>
              <shadedClassifierName>shaded</shadedClassifierName>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>fr.aphp.id.eds.requester.Application</mainClass>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
              </transformers>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
              <!--              <artifactSet>-->
              <!--                <excludes>-->
              <!--                  &lt;!&ndash;  begin removed for livy &ndash;&gt;-->
              <!--                  <exclude>org.scala-lang:scala-library</exclude>-->
              <!--                  <exclude>org.scala-lang:scala-reflect</exclude>-->
              <!--                  <exclude> org.scala-lang.modules:scala-parser-combinators_${scala.tools.version} </exclude>-->
              <!--&lt;!&ndash;                  <exclude>org.postgresql:postgresql</exclude>&ndash;&gt;-->
              <!--                  &lt;!&ndash;  end   removed for livy &ndash;&gt;-->
              <!--                  <exclude>log4j:log4j</exclude>-->
              <!--                  <exclude>org.slf4j:*</exclude>-->
              <!--                </excludes>-->
              <!--              </artifactSet>-->
              <relocations> </relocations>
            </configuration>
          </execution>
        </executions>
      </plugin>


      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>2.7.10</version>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <finalName>${project.artifactId}</finalName>
          <!--
            There is a problem with jersey that will not find some jars within the fat jar spring boot creates.
            This is a workaround to unpack the jars that are needed by jersey.
            This is needed for the executors tab in spark ui to work.
            https://github.com/spring-projects/spring-boot/issues/6598
            https://stackoverflow.com/questions/50610998/boot-inf-classes-no-such-file-or-directory-on-spring-boot-java-project
            https://github.com/spring-projects/spring-boot/issues/7496
            https://docs.spring.io/spring-boot/docs/1.5.x/reference/htmlsingle/#howto-extract-specific-libraries-when-an-executable-jar-runs
          -->
          <requiresUnpack>
            <dependency>
              <groupId>org.apache.spark</groupId>
              <artifactId>spark-sql_${scala.tools.version}</artifactId>
            </dependency>
            <dependency>
              <groupId>org.apache.spark</groupId>
              <artifactId>spark-core_${scala.tools.version}</artifactId>
            </dependency>
            <dependency>
              <groupId>org.apache.spark</groupId>
              <artifactId>spark-streaming_${scala.tools.version}</artifactId>
            </dependency>
          </requiresUnpack>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M4</version>
        <configuration>
          <skipTests>true</skipTests>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
        <version>2.0.0</version>
        <executions>
          <execution>
            <id>test</id>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <parallel>false</parallel>
          <argLine>
            --add-exports java.base/sun.nio.ch=ALL-UNNAMED --add-exports java.base/sun.util.calendar=ALL-UNNAMED --add-opens=java.base/java.nio=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED
          </argLine>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
        <version>3.9.0.2155</version>
      </plugin>

      <plugin>
        <groupId>org.scoverage</groupId>
        <artifactId>scoverage-maven-plugin</artifactId>
        <version>${scoverage.plugin.version}</version>
        <executions>
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Need at least 2.22.0 to support JUnit 5 -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <!-- attached to Maven test phase -->
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>
  
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.scoverage</groupId>
        <artifactId>scoverage-maven-plugin</artifactId>
        <version>${scoverage.plugin.version}</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>

</project>
